---

# Provision an OpenStack volume for this instance's extra storage
- name: OpenStack storage volume
  become: false
  connection: local
  os_volume:
    state: present
    wait: yes
    size: "{{ storage_volume_gb }}"
    display_name: "{{ ansible_host }}-storage-volume"
  register: storagevol

# Attach the OpenStack volume to the instance
- name: Attach OS volume
  connection: local
  become: false
  os_server_volume:
    state: present
    wait: yes
    server: "{{ ansible_host }}"
    volume: "{{ ansible_host }}-storage-volume"
  register: storage_vol_attach
  when: storagevol.changed

# Save storage volume path from /dev
- set_fact:  storage_volume_dev="{{ storage_vol_attach.attachments[0].device }}"
  when: storagevol.changed

# Format storage volume with xfs
- name: Format storage volume
  become: true
  filesystem: fstype=xfs dev="{{ storage_volume_dev }}"
  when: storagevol.changed
  
# Create subdirectories on storage volume
- name: Storage volume subdirectories
  become: true
  file: path="{{ storage_volume_dev }}/{{ item }}" state=directory
  with_items:
    - log
    - kubelet
  when: storagevol.changed

# Create systemd entries for subdirectory bind mounts
- name: create storage volume mount service for systemd
  become: true
  template: src=mount.service.j2 dest="/etc/systemd/system/{{ item.mount_service_name }}.mount"
  with_items:
    - { dest: /var/log, src: "{{ storage_volume_dev }}/log", mount_service_name: var-log }
    - { dest: /var/lib/kubelet, src: "{{ storage_volume_dev }}/kubelet", mount_service_name: var-lib-kubelet }
  when: storagevol.changed
  
# Specify bind mounts to startup with the node
- name: start storage volume mount service and set to start on startup
  become: true
  service: name="{{ item.mount_service_name }}.mount" state=started enabled=yes
  with_items:
    - { mount_service_name: var-log }
    - { mount_service_name: var-lib-kubelet }
  when: storagevol.changed

