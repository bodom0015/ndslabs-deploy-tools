- name: Kube Addons| copy yaml
  copy: src="{{ item }}" dest="/tmp/{{ item }}"
  with_items:
    - kube-system-namespace.yaml
    - kube-dash.yaml
    - kube-ui.yaml
    - elk.yaml
    - grafana.yaml
    - prometheus-all.json
    - prometheus-service.yaml
    - pushgateway-service.yaml


###########################
#  Namespace: kube-system
###########################
- name: Kube-System status
  command: kubectl get ns kube-system
  ignore_errors: yes
  register: namespace

- name: Kube Addons| create kube-system namespace
  command: kubectl create -f "/tmp/kube-system-namespace.yaml"
  when: namespace.rc != 0



##########################
#   Kubernetes Dashboard
##########################
- name: Kube Dashboard status
  command: kubectl get svc kubedash --namespace=kube-system
  ignore_errors: yes
  register: kubedash

- name: Kube Addons| create kube-dash 
  command: kubectl create --namespace=kube-system -f "/tmp/kube-dash.yaml"
  when: kubedash.rc != 0



######################
#   KubeUI
######################
- name: Kube UI status
  command: kubectl get svc kubernetes-dashboard --namespace=kube-system
  ignore_errors: yes
  register: kubeui

- name: Kube Addons| create kube-ui
  command: kubectl create --namespace=kube-system -f "/tmp/kube-ui.yaml"
  when: kubeui.rc != 0



###########################
#   Prometheus Dashboard
###########################
- name: Prometheus Dashboard status
  command: kubectl get svc prometheus --namespace=kube-system
  ignore_errors: yes
  register: promdash

- name: PushGateway status
  command: kubectl get svc pushgateway --namespace=kube-system
  ignore_errors: yes
  register: pushgateway

- name: Kube Addons| create prometheus stack
  command: kubectl create --namespace=kube-system -f "/tmp/prometheus-service.yaml" -f "/tmp/pushgateway-service.yaml" -f "/tmp/prometheus-all.json"
  when: (promdash.rc != 0 or pushgateway.rc != 0)



#######################
#  Logging: ELK (Kibana)
#######################
- name: Elasticsearch status
  command: kubectl get svc elasticsearch-logging --namespace=kube-system
  ignore_errors: yes
  register: elastic

- name: Kibana status
  command: kubectl get svc kibana-logging --namespace=kube-system
  ignore_errors: yes
  register: kibana

- name: Kube Addons| create elk stack
  command: kubectl create --namespace=kube-system -f "/tmp/elk.yaml"
  when: (elastic.rc != 0 or kibana.rc != 0)



##########################
#   Grafana and InfluxDB
##########################
- name: Grafana status
  command: kubectl get svc monitoring-grafana --namespace=kube-system
  ignore_errors: yes
  register: grafana

- name: InfluxDB status
  command: kubectl get svc monitoring-influxdb --namespace=kube-system
  ignore_errors: yes
  register: heapster

- name: Kube Addons| create grafana stack
  command: kubectl create --namespace=kube-system -f "/tmp/grafana.yaml"
  when: (grafana.rc != 0 or heapster.rc != 0)
